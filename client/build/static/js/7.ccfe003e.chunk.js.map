{"version":3,"sources":["post/apiPost.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","components/CustomCard.js","post/Allpost.js","../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","core/Home.js"],"names":["create","userId","token","post","a","axios","headers","Authorization","then","res","data","catch","err","list","get","console","log","pageList","page","response","like","postId","fetch","method","Accept","body","JSON","stringify","json","unlike","singlePost","id","listByUser","result","error","remove","update","comment","uncomment","CardDescription","props","children","className","content","textAlign","classes","cx","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","CardHeader","CardMeta","CardContent","description","extra","header","meta","useKeyOnly","createShorthand","val","autoGenerateKey","CardGroup","centered","doubling","items","itemsPerRow","stackable","useWidthProp","itemsJSX","_map","item","_item$key","key","join","Card","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleClick","e","onClick","_inheritsLoose","prototype","render","_this$props","color","fluid","href","image","link","raised","Image","defaultProps","ui","wrapped","Component","Content","Description","Group","Header","Meta","CustomCard","i","style","height","width","backgroundColor","src","_id","title","substring","Date","created","toDateString","dangerouslySetInnerHTML","__html","to","Icon","name","Allpost","loadMore","number","setState","state","loadPosts","loadLess","posts","renderPosts","map","posterId","postedBy","posterName","history","loading","Container","text","Home"],"mappings":"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","file":"static/js/7.ccfe003e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const create = async (userId, token, post) => {\n  return await axios\n    .post(`/api/post/new/${userId}`, post, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    .then((res) => res.data)\n    .catch((err) => err);\n};\n\nexport const list = async () => {\n  return await axios\n    .get(`/api/post`)\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      return err;\n    });\n};\nexport const pageList = async (page) => {\n  return await axios\n    .get(`/api/post/?page=${page}`)\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err.response);\n      return err.response;\n    });\n};\n\nexport const like = (userId, token, postId) => {\n  return fetch(`/api/post/like`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const unlike = (userId, token, postId) => {\n  return fetch(`/api/post/unlike`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\nexport const singlePost = async (id) => {\n  return await axios\n    .get(`/api/post/${id}`)\n    .then((res) => res.data)\n    .catch((err) => err);\n};\nexport const listByUser = async (userId, token) => {\n  return await axios\n    .get(`/api/post/by/${userId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    .then((res) => res.data.result)\n    .catch((err) => console.error(err));\n};\nexport const remove = async (postId, token) => {\n  try {\n    const response = await fetch(`/api/post/${postId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const update = async (postId, token, post) => {\n  //console.log(postId, token, post);\n  try {\n    const response = await axios(`/api/post/${postId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      data: post,\n    });\n    if (response) {\n      return response;\n    }\n  } catch (err) {\n    console.error(err);\n    if (err.response.data) {\n      return err.response.data;\n    }\n  }\n};\n\nexport const comment = (userId, token, postId, comment) => {\n  return fetch(`/api/post/comment`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId, comment }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const uncomment = (userId, token, postId, comment) => {\n  return fetch(`/api/post/uncomment`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId, comment }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var _item$key;\n\n    var key = (_item$key = item.key) != null ? _item$key : [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        centered = _this$props.centered,\n        children = _this$props.children,\n        className = _this$props.className,\n        color = _this$props.color,\n        content = _this$props.content,\n        description = _this$props.description,\n        extra = _this$props.extra,\n        fluid = _this$props.fluid,\n        header = _this$props.header,\n        href = _this$props.href,\n        image = _this$props.image,\n        link = _this$props.link,\n        meta = _this$props.meta,\n        onClick = _this$props.onClick,\n        raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n\n  return Card;\n}(Component);\n\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\n\r\n/**\r\n * @author\r\n * @function CustomCard\r\n **/\r\n\r\nconst CustomCard = ({ i, post }) => {\r\n  return (\r\n    <Fragment>\r\n      <Card key={i} style={{ height: \"350px\" }}>\r\n        <Image\r\n          style={{\r\n            height: \"200px\",\r\n            width: \"100%\",\r\n            backgroundColor: \"#0E2F56\"\r\n          }}\r\n          src={`/api/post/photo/${post._id}`}\r\n          wrapped\r\n          ui={false}\r\n        />\r\n        <Card.Content>\r\n          <Card.Header>{post.title.substring(0, 20)}</Card.Header>\r\n          <Card.Meta>\r\n            <span className=\"date\">\r\n              {new Date(post.created).toDateString()}\r\n            </span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n          <p\r\n              className=\"card-text\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: post.body ? post.body.substring(0, 200) + \"...\" : \"\"\r\n              }}\r\n            ></p>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n        <Link\r\n              to={`/post/${post._id}`}\r\n            >\r\n          <p>\r\n            <Icon name=\"arrow right\" />\r\n            Read more\r\n          </p>\r\n          </Link>\r\n        </Card.Content>\r\n      </Card>\r\n      {/* <div className=\"col-md-4 mb-2\" key={i}>\r\n        <div className=\"card h-100\">\r\n          <div className=\"card-body\">\r\n            <img\r\n              src={`/api/post/photo/${post._id}`}\r\n              alt={post.title}\r\n              onError={i => (i.target.src = `${Logo}`)}\r\n              className=\"img-fluid mb-3\"\r\n              style={{\r\n                height: \"200px\",\r\n                width: \"100%\",\r\n                backgroundColor: \"#0E2F56\"\r\n              }}\r\n            />\r\n            <h5 className=\"card-title\">{post.title}</h5>\r\n            <p\r\n              className=\"card-text\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: post.body ? post.body.substring(0, 200) + \"...\" : \"\"\r\n              }}\r\n            ></p>\r\n\r\n            <br />\r\n            <p className=\"font-italic mark\">\r\n              Posted by <Link to={`${posterId}`}>{posterName} </Link>\r\n              on {new Date(post.created).toDateString()}\r\n            </p>\r\n            <Link\r\n              to={`/post/${post._id}`}\r\n              className=\"btn btn-raised btn-primary btn-sm\"\r\n            >\r\n              Read more\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomCard;\r\n","import React, { Component } from \"react\";\nimport { list, pageList } from \"./apiPost\";\n\nimport CustomCard from \"../components/CustomCard\";\nimport { Card } from \"semantic-ui-react\";\nclass Allpost extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      page: 1,\n      loading: false,\n    };\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.loadPosts(this.state.page);\n    list()\n      .then((data) => {\n        //console.log(data)\n        this.setState({ posts: data.post, loading: false });\n      })\n      .catch((err) => console.log(err.response));\n  }\n  loadMore = (number) => {\n    this.setState({ page: this.state.page + number });\n    this.loadPosts(this.state.page + number);\n  };\n\n  loadLess = (number) => {\n    this.setState({ page: this.state.page - number });\n    this.loadPosts(this.state.page - number);\n  };\n\n  loadPosts = (page) => {\n    pageList(page).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        console.log(data.post);\n        this.setState({ posts: data.post });\n      }\n    });\n  };\n\n  renderPosts = (posts) => {\n    return (\n      <Card.Group stackable itemsPerRow = {4}>\n        {posts.map((post, i) => {\n          const posterId = post.postedBy ? `/user/${post.postedBy._id}` : \"\";\n          const posterName = post.postedBy ? post.postedBy.name : \" Unknown\";\n\n          return (\n            <CustomCard history ={this.props.history} i={i} post ={post} posterId ={posterId} posterName={posterName}/>\n          );\n        })}\n      </Card.Group>\n    );\n  };\n  render() {\n    const { posts, loading } = this.state;\n    if (loading) {\n      return <h2>Loading...</h2>;\n    }\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">\n          {!posts.length ? \"No more posts!\" : \"Recent Posts\"}\n        </h2>\n\n        {this.renderPosts(posts)}\n        {/* {page > 1 ? (\n          <button\n            className=\"btn btn-raised btn-warning mr-5 mt-5 mb-5\"\n            onClick={() => this.loadLess(1)}\n          >\n            Previous ({this.state.page - 1})\n          </button>\n        ) : (\n          \"\"\n        )}\n\n        {posts.length ? (\n          <button\n            className=\"btn btn-raised btn-success mt-5 mb-5\"\n            onClick={() => this.loadMore(1)}\n          >\n            Next ({page + 1})\n          </button>\n        ) : (\n          \"\"\n        )} */}\n      </div>\n    );\n  }\n}\n\nexport default Allpost;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Allpost from \"../post/Allpost\";\nfunction Home() {\n  return (\n    <div className=\"mb-5\">\n      {/* <div className=\"jumbotron\">\n                <h2>Home</h2>\n                <p className='lead'>Welcome To ReadWrite : Freedom to Read n Write anything...</p>\n            </div> */}\n      <div className=\"container-fluid\">\n        <Container>\n          <Allpost />\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}