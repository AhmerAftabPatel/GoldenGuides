{"version":3,"sources":["post/apiPost.js","core/Logo.png","post/EditPost.js"],"names":["create","userId","token","post","a","axios","headers","Authorization","then","res","data","catch","err","list","get","console","log","pageList","page","response","like","postId","fetch","method","Accept","body","JSON","stringify","json","unlike","singlePost","id","listByUser","result","error","remove","update","comment","uncomment","module","exports","EditPost","init","setState","redirectToProfile","postedBy","_id","title","isValid","state","fileSize","loading","length","handleChange","name","event","value","target","files","size","postData","append","clickSubmit","preventDefault","props","match","params","isAuthenticated","photo","editPostForm","className","onChange","type","accept","onInit","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","getData","DecoupledEditor","onClick","this","FormData","to","user","style","display","align","height","width","src","onError","i","Logo","alt","Component"],"mappings":"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","file":"static/js/8.0853d1b4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const create = async (userId, token, post) => {\n  return await axios\n    .post(`/api/post/new/${userId}`, post, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    .then((res) => res.data)\n    .catch((err) => err);\n};\n\nexport const list = async () => {\n  return await axios\n    .get(`/api/post`)\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      return err;\n    });\n};\nexport const pageList = async (page) => {\n  return await axios\n    .get(`/api/post/?page=${page}`)\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err.response);\n      return err.response;\n    });\n};\n\nexport const like = (userId, token, postId) => {\n  return fetch(`/api/post/like`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const unlike = (userId, token, postId) => {\n  return fetch(`/api/post/unlike`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\nexport const singlePost = async (id) => {\n  return await axios\n    .get(`/api/post/${id}`)\n    .then((res) => res.data)\n    .catch((err) => err);\n};\nexport const listByUser = async (userId, token) => {\n  return await axios\n    .get(`/api/post/by/${userId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    .then((res) => res.data.result)\n    .catch((err) => console.error(err));\n};\nexport const remove = async (postId, token) => {\n  try {\n    const response = await fetch(`/api/post/${postId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const update = async (postId, token, post) => {\n  //console.log(postId, token, post);\n  try {\n    const response = await axios(`/api/post/${postId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      data: post,\n    });\n    if (response) {\n      return response;\n    }\n  } catch (err) {\n    console.error(err);\n    if (err.response.data) {\n      return err.response.data;\n    }\n  }\n};\n\nexport const comment = (userId, token, postId, comment) => {\n  return fetch(`/api/post/comment`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId, comment }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const uncomment = (userId, token, postId, comment) => {\n  return fetch(`/api/post/uncomment`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ userId, postId, comment }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n","module.exports = __webpack_public_path__ + \"static/media/Logo.2aee7378.png\";","import React, { Component } from \"react\";\nimport { singlePost, update } from \"./apiPost\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport Logo from \"../core/Logo.png\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\n\nclass EditPost extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      redirectToProfile: false,\n      error: \"\",\n      fileSize: 0,\n      loading: false,\n    };\n  }\n\n  init = (postId) => {\n    singlePost(postId).then((data) => {\n      if (data.error) {\n        this.setState({ redirectToProfile: true });\n      } else {\n        this.setState({\n          id: data.postedBy._id,\n          title: data.title,\n          body: data.body,\n          error: \"\",\n        });\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.postData = new FormData();\n    const postId = this.props.match.params.postId;\n    this.init(postId);\n  }\n\n  isValid = () => {\n    const { title, body, fileSize } = this.state;\n    if (fileSize > 1000000) {\n      console.log(fileSize);\n      this.setState({\n        error: \"File size should be less than 100kb\",\n        loading: false,\n      });\n      return false;\n    }\n    if (title.length === 0 || body.length === 0) {\n      this.setState({ error: \"All fields are required\", loading: false });\n      return false;\n    }\n    return true;\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ error: \"\" });\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n    this.postData.append(name, value);\n    this.setState({ [name]: value, fileSize });\n  };\n\n  clickSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    //console.log(this.postData.get(\"body\"));\n    if (this.isValid()) {\n      const postId = this.props.match.params.postId;\n      const token = isAuthenticated().token;\n\n      update(postId, token, this.postData)\n        .then((data) => {\n          this.setState({\n            loading: false,\n            redirectToProfile: true,\n            title: \"\",\n            body: \"\",\n            photo: \"\",\n            error: \"\",\n          });\n        })\n        .catch((err) => {\n          this.setState({ error: err.error, loading: false });\n        });\n    }\n  };\n\n  editPostForm = (title, body) => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Post Photo</label>\n        <input\n          onChange={this.handleChange(\"photo\")}\n          type=\"file\"\n          accept=\"image/*\"\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Title</label>\n        <input\n          onChange={this.handleChange(\"title\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={title}\n        />\n      </div>\n      <div className=\"md-form\">\n        <CKEditor\n          onInit={(editor) => {\n            //console.log(\"Editor is ready to use!\", editor);\n            // Insert the toolbar before the editable area.\n            editor.ui\n              .getEditableElement()\n              .parentElement.insertBefore(\n                editor.ui.view.toolbar.element,\n                editor.ui.getEditableElement()\n              );\n          }}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            this.postData.append(\"body\", data);\n            //console.log(data);\n            this.setState({ body: data });\n          }}\n          editor={DecoupledEditor}\n          data={body}\n        />\n      </div>\n      <button onClick={this.clickSubmit} className=\"btn btn-raised btn-primary\">\n        Update Post\n      </button>\n    </form>\n  );\n\n  render() {\n    const { id, title, body, redirectToProfile, error, loading } = this.state;\n\n    if (redirectToProfile) {\n      return <Redirect to={`/user/${isAuthenticated().user._id}`} />;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"m-4\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n\n          {loading ? (\n            <div align=\"center\" className=\"ui segment\">\n              <div className=\"ui active inverted dimmer\">\n                <div className=\"ui text loader\">Loading</div>\n              </div>\n              <p></p>\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <img\n            style={{ height: \"200px\", width: \"auto\" }}\n            className=\"img-thumbnail\"\n            src={`/api/post/photo/${this.props.match.params.postId}`}\n            onError={(i) => (i.target.src = `${Logo}`)}\n            alt={title}\n          />\n          {isAuthenticated().user._id === id && this.editPostForm(title, body)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditPost;\n"],"sourceRoot":""}